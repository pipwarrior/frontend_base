{"ast":null,"code":"var _jsxFileName = \"/Users/yapfengwei/Desktop/MyApplications/sample3_frontend/src/Components/FormComponents/FormTextMulti.js\";\nimport React, { useState, useEffect, useRef, createRef } from 'react';\nimport { Grid, FormControl, TextField, Typography, makeStyles, Button, Chip } from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  gridRoot: {\n    flexGrow: 1\n  },\n  formControl: {\n    // margin: theme.spacing(0.5),\n    width: '100%'\n  },\n  inlineStyle: {\n    display: 'inline-block',\n    width: '100%'\n  },\n  addButtonStyle: {// margin: '10px 0px 0px 0px'\n  },\n  textBoxStyle: {\n    width: '100%'\n  },\n  chipStyle: {\n    margin: '5px 0px 0px 5px',\n    width: '24%'\n  }\n}));\n\nconst FormTextMulti = props => {\n  const fieldName = props.field.name;\n  const handleChange = props.form.setFieldValue;\n  const classes = useStyles();\n  const [fieldValue, setFieldValue] = useState(props.field.value);\n  const textBoxRef = useRef(null);\n  const chipRef = fieldValue.map(() => createRef());\n  useEffect(() => {\n    handleChange(fieldName, fieldValue);\n  }, [fieldValue, fieldName, handleChange]);\n\n  const addItem = () => {\n    const newItem = textBoxRef.current.children[0].children[0].value;\n\n    if (newItem.trim() !== '') {\n      setFieldValue(prevState => {\n        return [...prevState, newItem];\n      });\n      textBoxRef.current.children[0].children[0].value = '';\n    }\n  };\n\n  const displayFieldValue = fieldValue.map((value, key) => {\n    return /*#__PURE__*/React.createElement(Chip, {\n      key: key,\n      label: value // onDelete={() => {\n      //   const textContent = chipRef[key].current.children[0].textContent;\n      //   const removeThis = chipRef[key].current;\n      //   setFieldValue(prevState => {\n      //     // const newState = prevState.filter(item => item !== textContent);\n      //     prevState.splice(key,1);\n      //     return prevState;\n      //   })\n      // }}\n      ,\n      onDelete: () => {\n        const textContent = chipRef[key].current.children[0].textContent; // const removeThis = chipRef[key].current;\n\n        setFieldValue(prevState => {\n          const newState = prevState.filter(item => item !== textContent);\n          return newState;\n        });\n      },\n      color: \"primary\",\n      variant: \"outlined\",\n      className: classes.chipStyle,\n      ref: chipRef[key],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    });\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle2\",\n    display: \"block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, props.title), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 0,\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 11,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    name: fieldName,\n    type: \"text\",\n    disabled: props.disabled,\n    variant: \"standard\",\n    size: \"medium\",\n    ref: textBoxRef,\n    className: classes.textBoxStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: addItem,\n    className: classes.addButtonStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, \"Add\"))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, displayFieldValue)));\n};\n\nexport default FormTextMulti;","map":{"version":3,"sources":["/Users/yapfengwei/Desktop/MyApplications/sample3_frontend/src/Components/FormComponents/FormTextMulti.js"],"names":["React","useState","useEffect","useRef","createRef","Grid","FormControl","TextField","Typography","makeStyles","Button","Chip","useStyles","theme","gridRoot","flexGrow","formControl","width","inlineStyle","display","addButtonStyle","textBoxStyle","chipStyle","margin","FormTextMulti","props","fieldName","field","name","handleChange","form","setFieldValue","classes","fieldValue","value","textBoxRef","chipRef","map","addItem","newItem","current","children","trim","prevState","displayFieldValue","key","textContent","newState","filter","item","marginTop","title","disabled"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, createRef } from 'react';\r\nimport { Grid, FormControl, TextField, Typography, makeStyles, Button, Chip } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  gridRoot: {\r\n    flexGrow: 1,\r\n  },\r\n  formControl: {\r\n    // margin: theme.spacing(0.5),\r\n    width: '100%',\r\n  },\r\n  inlineStyle: {\r\n    display: 'inline-block',\r\n    width: '100%',\r\n  },\r\n  addButtonStyle: {\r\n    // margin: '10px 0px 0px 0px'\r\n  },\r\n  textBoxStyle: {\r\n    width: '100%',\r\n  },\r\n  chipStyle: {\r\n    margin: '5px 0px 0px 5px',\r\n    width: '24%',\r\n  }\r\n}));\r\n\r\nconst FormTextMulti = (props) => {\r\n  const fieldName = props.field.name;\r\n  const handleChange = props.form.setFieldValue;\r\n  const classes = useStyles();\r\n  const [fieldValue, setFieldValue] = useState(props.field.value);\r\n  const textBoxRef = useRef(null);\r\n  const chipRef = fieldValue.map(() => createRef());\r\n\r\n  useEffect(() => {\r\n    handleChange(fieldName, fieldValue);\r\n  }, [fieldValue, fieldName, handleChange]);\r\n\r\n  const addItem = () => {\r\n    const newItem = textBoxRef.current.children[0].children[0].value;\r\n    if (newItem.trim() !== '') {\r\n      setFieldValue(prevState => {return [...prevState, newItem]});\r\n      textBoxRef.current.children[0].children[0].value = '';\r\n    }\r\n  }\r\n\r\n  const displayFieldValue = fieldValue.map((value, key) => {\r\n    return (\r\n      <Chip \r\n        key={key}\r\n        label={value}\r\n        // onDelete={() => {\r\n        //   const textContent = chipRef[key].current.children[0].textContent;\r\n        //   const removeThis = chipRef[key].current;\r\n        //   setFieldValue(prevState => {\r\n        //     // const newState = prevState.filter(item => item !== textContent);\r\n        //     prevState.splice(key,1);\r\n        //     return prevState;\r\n        //   })\r\n        // }}\r\n        onDelete={() => {\r\n          const textContent = chipRef[key].current.children[0].textContent;\r\n          // const removeThis = chipRef[key].current;\r\n          setFieldValue(prevState => {\r\n            const newState = prevState.filter(item => item !== textContent);\r\n            return newState;\r\n          })\r\n        }}\r\n        color=\"primary\"\r\n        variant=\"outlined\"\r\n        className={classes.chipStyle}\r\n        ref={chipRef[key]}\r\n      />\r\n    )\r\n  });\r\n\r\n  return (\r\n    <div style={{ marginTop: 10 }}>\r\n      <FormControl className={classes.formControl}>\r\n        <Typography variant=\"subtitle2\" display=\"block\">\r\n          {props.title}\r\n        </Typography>\r\n        <Grid container spacing={0} style={{width:'100%'}}>\r\n          <Grid item xs={11}>\r\n            <TextField\r\n              name={fieldName}\r\n              type='text'\r\n              disabled={props.disabled}\r\n              variant=\"standard\"\r\n              size=\"medium\"\r\n              ref={textBoxRef}\r\n              className={classes.textBoxStyle}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={1}>\r\n            <Button \r\n              variant=\"contained\" \r\n              color=\"primary\" \r\n              onClick={addItem} \r\n              className={classes.addButtonStyle}\r\n            >\r\n              Add\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <div>\r\n          {displayFieldValue}\r\n        </div>\r\n      </FormControl>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FormTextMulti;"]},"metadata":{},"sourceType":"module"}