{"ast":null,"code":"var _jsxFileName = \"/Users/yapfengwei/Desktop/MyApplications/sample3_frontend/src/Routes/Route.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst RouteWrapper = ({\n  component: Component,\n  isPrivate,\n  isPublic,\n  ...rest\n}) => {\n  const signed = false;\n  console.log('Is private: ' + isPrivate);\n  console.log('Is public: ' + isPublic); // Route is private and the user is not logged in\n\n  if (isPrivate && !signed) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, \"Nav\"), /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    component: Component,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }))));\n};\n\nexport default RouteWrapper;\nRouteWrapper.propTypes = {\n  isPrivate: PropTypes.bool,\n  component: PropTypes.oneOfType([PropTypes.element, PropTypes.func]).isRequired\n};\nRouteWrapper.defaultProps = {\n  isPrivate: false\n};","map":{"version":3,"sources":["/Users/yapfengwei/Desktop/MyApplications/sample3_frontend/src/Routes/Route.js"],"names":["React","PropTypes","Route","Redirect","RouteWrapper","component","Component","isPrivate","isPublic","rest","signed","console","log","propTypes","bool","oneOfType","element","func","isRequired","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;;AAEA,MAAMC,YAAY,GAAG,CAAC;AACpBC,EAAAA,SAAS,EAAEC,SADS;AAEpBC,EAAAA,SAFoB;AAGpBC,EAAAA,QAHoB;AAIpB,KAAGC;AAJiB,CAAD,KAKf;AACJ,QAAMC,MAAM,GAAG,KAAf;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAiBL,SAA7B;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgBJ,QAA5B,EAHI,CAIJ;;AACA,MAAID,SAAS,IAAI,CAACG,MAAlB,EAA0B;AACxB,wBAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,sBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,eAEE,oBAAC,KAAD,oBAAWD,IAAX;AAAiB,IAAA,SAAS,EAAEH,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,CADF,CADF;AAQD,CAtBD;;AAwBA,eAAeF,YAAf;AAEAA,YAAY,CAACS,SAAb,GAAyB;AACvBN,EAAAA,SAAS,EAAEN,SAAS,CAACa,IADE;AAEvBT,EAAAA,SAAS,EAAEJ,SAAS,CAACc,SAAV,CAAoB,CAACd,SAAS,CAACe,OAAX,EAAoBf,SAAS,CAACgB,IAA9B,CAApB,EAAyDC;AAF7C,CAAzB;AAKAd,YAAY,CAACe,YAAb,GAA4B;AAC1BZ,EAAAA,SAAS,EAAE;AADe,CAA5B","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst RouteWrapper = ({\n  component: Component,\n  isPrivate,\n  isPublic,\n  ...rest\n}) => {\n  const signed = false;\n  console.log('Is private: ' + isPrivate)\n  console.log('Is public: ' + isPublic)\n  // Route is private and the user is not logged in\n  if (isPrivate && !signed) {\n    return <Redirect to=\"/login\" />;\n  }\n\n  return (\n    <>\n      <div>\n        <div>Nav</div>\n        <Route {...rest} component={Component} />\n      </div>\n    </>\n  )\n}\n\nexport default RouteWrapper;\n\nRouteWrapper.propTypes = {\n  isPrivate: PropTypes.bool,\n  component: PropTypes.oneOfType([PropTypes.element, PropTypes.func]).isRequired\n}\n\nRouteWrapper.defaultProps = {\n  isPrivate: false\n}\n"]},"metadata":{},"sourceType":"module"}