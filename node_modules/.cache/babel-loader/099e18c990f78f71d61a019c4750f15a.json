{"ast":null,"code":"import _toConsumableArray from\"/Users/yapfengwei/Desktop/MyApplications/catalogProject_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/yapfengwei/Desktop/MyApplications/catalogProject_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useRef,createRef}from'react';import{Grid,FormControl,TextField,Typography,makeStyles,Button,Chip}from'@material-ui/core';var useStyles=makeStyles(function(theme){return{gridRoot:{flexGrow:1},formControl:{// margin: theme.spacing(0.5),\nwidth:'100%'},inlineStyle:{display:'inline-block',width:'100%'},addButtonStyle:{// margin: '10px 0px 0px 0px'\n// float: 'right'\n},textBoxStyle:{width:'100%'},chipStyle:{margin:'5px 0px 0px 5px',width:'24%'}};});var FormTextMulti=function FormTextMulti(props){var fieldName=props.field.name;var handleChange=props.form.setFieldValue;var classes=useStyles();var _useState=useState(props.field.value),_useState2=_slicedToArray(_useState,2),fieldValue=_useState2[0],setFieldValue=_useState2[1];var textBoxRef=useRef(null);var chipRef=fieldValue.map(function(){return createRef();});useEffect(function(){handleChange(fieldName,fieldValue);},[fieldValue,fieldName,handleChange]);var addItem=function addItem(){var newItem=textBoxRef.current.children[0].children[0].value;if(newItem.trim()!==''){setFieldValue(function(prevState){return[].concat(_toConsumableArray(prevState),[newItem]);});textBoxRef.current.children[0].children[0].value='';}};var displayFieldValue=fieldValue.map(function(value,key){return/*#__PURE__*/React.createElement(Chip,{key:key,label:value// onDelete={() => {\n//   const textContent = chipRef[key].current.children[0].textContent;\n//   const removeThis = chipRef[key].current;\n//   setFieldValue(prevState => {\n//     // const newState = prevState.filter(item => item !== textContent);\n//     prevState.splice(key,1);\n//     return prevState;\n//   })\n// }}\n,onDelete:function onDelete(){var textContent=chipRef[key].current.children[0].textContent;// const removeThis = chipRef[key].current;\nsetFieldValue(function(prevState){var newState=prevState.filter(function(item){return item!==textContent;});return newState;});},color:\"primary\",variant:\"outlined\",className:classes.chipStyle,ref:chipRef[key]});});return/*#__PURE__*/React.createElement(\"div\",{style:{marginTop:10}},/*#__PURE__*/React.createElement(FormControl,{className:classes.formControl},/*#__PURE__*/React.createElement(Typography,{variant:\"subtitle2\",display:\"block\"},props.title),/*#__PURE__*/React.createElement(Grid,{container:true,spacing:1,style:{width:'100%'}},/*#__PURE__*/React.createElement(Grid,{item:true,xs:11},/*#__PURE__*/React.createElement(TextField,{name:fieldName,type:\"text\",disabled:props.disabled,variant:\"standard\",size:\"medium\",ref:textBoxRef,className:classes.textBoxStyle})),/*#__PURE__*/React.createElement(Grid,{item:true,xs:1,style:{display:\"flex\"}},/*#__PURE__*/React.createElement(Button,{variant:\"contained\",color:\"primary\",onClick:addItem// className={classes.addButtonStyle}\n},\"Add\"))),/*#__PURE__*/React.createElement(\"div\",null,displayFieldValue)));};export default FormTextMulti;","map":{"version":3,"sources":["/Users/yapfengwei/Desktop/MyApplications/catalogProject_frontend/src/Components/FormComponents/FormTextMulti.js"],"names":["React","useState","useEffect","useRef","createRef","Grid","FormControl","TextField","Typography","makeStyles","Button","Chip","useStyles","theme","gridRoot","flexGrow","formControl","width","inlineStyle","display","addButtonStyle","textBoxStyle","chipStyle","margin","FormTextMulti","props","fieldName","field","name","handleChange","form","setFieldValue","classes","value","fieldValue","textBoxRef","chipRef","map","addItem","newItem","current","children","trim","prevState","displayFieldValue","key","textContent","newState","filter","item","marginTop","title","disabled"],"mappings":"sXAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,CAAqCC,MAArC,CAA6CC,SAA7C,KAA8D,OAA9D,CACA,OAASC,IAAT,CAAeC,WAAf,CAA4BC,SAA5B,CAAuCC,UAAvC,CAAmDC,UAAnD,CAA+DC,MAA/D,CAAuEC,IAAvE,KAAmF,mBAAnF,CAEA,GAAMC,CAAAA,SAAS,CAAGH,UAAU,CAAC,SAACI,KAAD,QAAY,CACvCC,QAAQ,CAAE,CACRC,QAAQ,CAAE,CADF,CAD6B,CAIvCC,WAAW,CAAE,CACX;AACAC,KAAK,CAAE,MAFI,CAJ0B,CAQvCC,WAAW,CAAE,CACXC,OAAO,CAAE,cADE,CAEXF,KAAK,CAAE,MAFI,CAR0B,CAYvCG,cAAc,CAAE,CACd;AACA;AAFc,CAZuB,CAgBvCC,YAAY,CAAE,CACZJ,KAAK,CAAE,MADK,CAhByB,CAmBvCK,SAAS,CAAE,CACTC,MAAM,CAAE,iBADC,CAETN,KAAK,CAAE,KAFE,CAnB4B,CAAZ,EAAD,CAA5B,CAyBA,GAAMO,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,KAAD,CAAW,CAC/B,GAAMC,CAAAA,SAAS,CAAGD,KAAK,CAACE,KAAN,CAAYC,IAA9B,CACA,GAAMC,CAAAA,YAAY,CAAGJ,KAAK,CAACK,IAAN,CAAWC,aAAhC,CACA,GAAMC,CAAAA,OAAO,CAAGpB,SAAS,EAAzB,CAH+B,cAIKX,QAAQ,CAACwB,KAAK,CAACE,KAAN,CAAYM,KAAb,CAJb,wCAIxBC,UAJwB,eAIZH,aAJY,eAK/B,GAAMI,CAAAA,UAAU,CAAGhC,MAAM,CAAC,IAAD,CAAzB,CACA,GAAMiC,CAAAA,OAAO,CAAGF,UAAU,CAACG,GAAX,CAAe,iBAAMjC,CAAAA,SAAS,EAAf,EAAf,CAAhB,CAEAF,SAAS,CAAC,UAAM,CACd2B,YAAY,CAACH,SAAD,CAAYQ,UAAZ,CAAZ,CACD,CAFQ,CAEN,CAACA,UAAD,CAAaR,SAAb,CAAwBG,YAAxB,CAFM,CAAT,CAIA,GAAMS,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CACpB,GAAMC,CAAAA,OAAO,CAAGJ,UAAU,CAACK,OAAX,CAAmBC,QAAnB,CAA4B,CAA5B,EAA+BA,QAA/B,CAAwC,CAAxC,EAA2CR,KAA3D,CACA,GAAIM,OAAO,CAACG,IAAR,KAAmB,EAAvB,CAA2B,CACzBX,aAAa,CAAC,SAAAY,SAAS,CAAI,CAAC,mCAAWA,SAAX,GAAsBJ,OAAtB,GAA+B,CAA9C,CAAb,CACAJ,UAAU,CAACK,OAAX,CAAmBC,QAAnB,CAA4B,CAA5B,EAA+BA,QAA/B,CAAwC,CAAxC,EAA2CR,KAA3C,CAAmD,EAAnD,CACD,CACF,CAND,CAQA,GAAMW,CAAAA,iBAAiB,CAAGV,UAAU,CAACG,GAAX,CAAe,SAACJ,KAAD,CAAQY,GAAR,CAAgB,CACvD,mBACE,oBAAC,IAAD,EACE,GAAG,CAAEA,GADP,CAEE,KAAK,CAAEZ,KACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXF,CAYE,QAAQ,CAAE,mBAAM,CACd,GAAMa,CAAAA,WAAW,CAAGV,OAAO,CAACS,GAAD,CAAP,CAAaL,OAAb,CAAqBC,QAArB,CAA8B,CAA9B,EAAiCK,WAArD,CACA;AACAf,aAAa,CAAC,SAAAY,SAAS,CAAI,CACzB,GAAMI,CAAAA,QAAQ,CAAGJ,SAAS,CAACK,MAAV,CAAiB,SAAAC,IAAI,QAAIA,CAAAA,IAAI,GAAKH,WAAb,EAArB,CAAjB,CACA,MAAOC,CAAAA,QAAP,CACD,CAHY,CAAb,CAID,CAnBH,CAoBE,KAAK,CAAC,SApBR,CAqBE,OAAO,CAAC,UArBV,CAsBE,SAAS,CAAEf,OAAO,CAACV,SAtBrB,CAuBE,GAAG,CAAEc,OAAO,CAACS,GAAD,CAvBd,EADF,CA2BD,CA5ByB,CAA1B,CA8BA,mBACE,2BAAK,KAAK,CAAE,CAAEK,SAAS,CAAE,EAAb,CAAZ,eACE,oBAAC,WAAD,EAAa,SAAS,CAAElB,OAAO,CAAChB,WAAhC,eACE,oBAAC,UAAD,EAAY,OAAO,CAAC,WAApB,CAAgC,OAAO,CAAC,OAAxC,EACGS,KAAK,CAAC0B,KADT,CADF,cAIE,oBAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,OAAO,CAAE,CAAzB,CAA4B,KAAK,CAAE,CAAClC,KAAK,CAAC,MAAP,CAAnC,eACE,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,eACE,oBAAC,SAAD,EACE,IAAI,CAAES,SADR,CAEE,IAAI,CAAC,MAFP,CAGE,QAAQ,CAAED,KAAK,CAAC2B,QAHlB,CAIE,OAAO,CAAC,UAJV,CAKE,IAAI,CAAC,QALP,CAME,GAAG,CAAEjB,UANP,CAOE,SAAS,CAAEH,OAAO,CAACX,YAPrB,EADF,CADF,cAYE,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,CAAf,CAAkB,KAAK,CAAE,CAACF,OAAO,CAAE,MAAV,CAAzB,eACE,oBAAC,MAAD,EACE,OAAO,CAAC,WADV,CAEE,KAAK,CAAC,SAFR,CAGE,OAAO,CAAEmB,OACT;AAJF,QADF,CAZF,CAJF,cA2BE,+BACGM,iBADH,CA3BF,CADF,CADF,CAmCD,CArFD,CAuFA,cAAepB,CAAAA,aAAf","sourcesContent":["import React, { useState, useEffect, useRef, createRef } from 'react';\r\nimport { Grid, FormControl, TextField, Typography, makeStyles, Button, Chip } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  gridRoot: {\r\n    flexGrow: 1,\r\n  },\r\n  formControl: {\r\n    // margin: theme.spacing(0.5),\r\n    width: '100%',\r\n  },\r\n  inlineStyle: {\r\n    display: 'inline-block',\r\n    width: '100%',\r\n  },\r\n  addButtonStyle: {\r\n    // margin: '10px 0px 0px 0px'\r\n    // float: 'right'\r\n  },\r\n  textBoxStyle: {\r\n    width: '100%',\r\n  },\r\n  chipStyle: {\r\n    margin: '5px 0px 0px 5px',\r\n    width: '24%',\r\n  }\r\n}));\r\n\r\nconst FormTextMulti = (props) => {\r\n  const fieldName = props.field.name;\r\n  const handleChange = props.form.setFieldValue;\r\n  const classes = useStyles();\r\n  const [fieldValue, setFieldValue] = useState(props.field.value);\r\n  const textBoxRef = useRef(null);\r\n  const chipRef = fieldValue.map(() => createRef());\r\n\r\n  useEffect(() => {\r\n    handleChange(fieldName, fieldValue);\r\n  }, [fieldValue, fieldName, handleChange]);\r\n\r\n  const addItem = () => {\r\n    const newItem = textBoxRef.current.children[0].children[0].value;\r\n    if (newItem.trim() !== '') {\r\n      setFieldValue(prevState => {return [...prevState, newItem]});\r\n      textBoxRef.current.children[0].children[0].value = '';\r\n    }\r\n  }\r\n\r\n  const displayFieldValue = fieldValue.map((value, key) => {\r\n    return (\r\n      <Chip \r\n        key={key}\r\n        label={value}\r\n        // onDelete={() => {\r\n        //   const textContent = chipRef[key].current.children[0].textContent;\r\n        //   const removeThis = chipRef[key].current;\r\n        //   setFieldValue(prevState => {\r\n        //     // const newState = prevState.filter(item => item !== textContent);\r\n        //     prevState.splice(key,1);\r\n        //     return prevState;\r\n        //   })\r\n        // }}\r\n        onDelete={() => {\r\n          const textContent = chipRef[key].current.children[0].textContent;\r\n          // const removeThis = chipRef[key].current;\r\n          setFieldValue(prevState => {\r\n            const newState = prevState.filter(item => item !== textContent);\r\n            return newState;\r\n          })\r\n        }}\r\n        color=\"primary\"\r\n        variant=\"outlined\"\r\n        className={classes.chipStyle}\r\n        ref={chipRef[key]}\r\n      />\r\n    )\r\n  });\r\n\r\n  return (\r\n    <div style={{ marginTop: 10 }}>\r\n      <FormControl className={classes.formControl}>\r\n        <Typography variant=\"subtitle2\" display=\"block\">\r\n          {props.title}\r\n        </Typography>\r\n        <Grid container spacing={1} style={{width:'100%'}}>\r\n          <Grid item xs={11}>\r\n            <TextField\r\n              name={fieldName}\r\n              type='text'\r\n              disabled={props.disabled}\r\n              variant=\"standard\"\r\n              size=\"medium\"\r\n              ref={textBoxRef}\r\n              className={classes.textBoxStyle}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={1} style={{display: \"flex\"}}>\r\n            <Button \r\n              variant=\"contained\" \r\n              color=\"primary\" \r\n              onClick={addItem} \r\n              // className={classes.addButtonStyle}\r\n            >\r\n              Add\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <div>\r\n          {displayFieldValue}\r\n        </div>\r\n      </FormControl>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FormTextMulti;"]},"metadata":{},"sourceType":"module"}