{"ast":null,"code":"import _objectWithoutProperties from\"/Users/yapfengwei/Desktop/MyApplications/catalogProject_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React from'react';import{Route,Redirect}from'react-router-dom';var RouteWrapper=function RouteWrapper(_ref){var Component=_ref.component,isLoginPage=_ref.isLoginPage,isPrivate=_ref.isPrivate,isAdminOnly=_ref.isAdminOnly,rest=_objectWithoutProperties(_ref,[\"component\",\"isLoginPage\",\"isPrivate\",\"isAdminOnly\"]);var signed=localStorage.getItem('auth-token');var accountType=localStorage.getItem('accountType');if(isLoginPage&&signed&&accountType){return/*#__PURE__*/React.createElement(Redirect,{to:\"/catalog\"});}// Route is private and the user is not logged in\nif(isPrivate&&!signed){return/*#__PURE__*/React.createElement(Redirect,{to:\"/login\"});}if(isAdminOnly&&accountType!==\"Admin\"){return/*#__PURE__*/React.createElement(Redirect,{to:\"/\"});}return/*#__PURE__*/React.createElement(Route,Object.assign({},rest,{component:Component}));};export default RouteWrapper;RouteWrapper.defaultProps={isPrivate:false};","map":{"version":3,"sources":["/Users/yapfengwei/Desktop/MyApplications/catalogProject_frontend/src/Routes/Route.js"],"names":["React","Route","Redirect","RouteWrapper","Component","component","isLoginPage","isPrivate","isAdminOnly","rest","signed","localStorage","getItem","accountType","defaultProps"],"mappings":"2MAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,KAAT,CAAgBC,QAAhB,KAAgC,kBAAhC,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAMf,IALOC,CAAAA,SAKP,MALJC,SAKI,CAJJC,WAII,MAJJA,WAII,CAHJC,SAGI,MAHJA,SAGI,CAFJC,WAEI,MAFJA,WAEI,CADDC,IACC,sFACJ,GAAMC,CAAAA,MAAM,CAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAf,CACA,GAAMC,CAAAA,WAAW,CAAGF,YAAY,CAACC,OAAb,CAAqB,aAArB,CAApB,CAEA,GAAIN,WAAW,EAAII,MAAf,EAAyBG,WAA7B,CAA0C,CACxC,mBAAO,oBAAC,QAAD,EAAU,EAAE,CAAC,UAAb,EAAP,CACD,CAED;AACA,GAAIN,SAAS,EAAI,CAACG,MAAlB,CAA0B,CACxB,mBAAO,oBAAC,QAAD,EAAU,EAAE,CAAC,QAAb,EAAP,CACD,CAED,GAAGF,WAAW,EAAIK,WAAW,GAAK,OAAlC,CAA0C,CACxC,mBAAO,oBAAC,QAAD,EAAU,EAAE,CAAC,GAAb,EAAP,CACD,CAED,mBACE,oBAAC,KAAD,kBAAWJ,IAAX,EAAiB,SAAS,CAAEL,SAA5B,GADF,CAGD,CA1BD,CA4BA,cAAeD,CAAAA,YAAf,CAOAA,YAAY,CAACW,YAAb,CAA4B,CAC1BP,SAAS,CAAE,KADe,CAA5B","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst RouteWrapper = ({\n  component: Component,\n  isLoginPage,\n  isPrivate,\n  isAdminOnly,\n  ...rest\n}) => {\n  const signed = localStorage.getItem('auth-token');\n  const accountType = localStorage.getItem('accountType');\n  \n  if (isLoginPage && signed && accountType) {\n    return <Redirect to=\"/catalog\" />\n  }\n\n  // Route is private and the user is not logged in\n  if (isPrivate && !signed) {\n    return <Redirect to=\"/login\" />;\n  }\n\n  if(isAdminOnly && accountType !== \"Admin\"){\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <Route {...rest} component={Component} />\n  )\n}\n\nexport default RouteWrapper;\n\nRouteWrapper.propTypes = {\n  isPrivate: PropTypes.bool,\n  component: PropTypes.oneOfType([PropTypes.element, PropTypes.func]).isRequired\n}\n\nRouteWrapper.defaultProps = {\n  isPrivate: false\n}\n"]},"metadata":{},"sourceType":"module"}