{"ast":null,"code":"var _jsxFileName = \"/Users/yapfengwei/Desktop/MyApplications/sample3_frontend/src/Components/FormComponents/FormTextMulti.js\";\nimport React, { useState, useEffect, useRef, createRef } from 'react';\nimport { FormControl, TextField, Typography, makeStyles, Button, Chip } from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    // margin: theme.spacing(0.5),\n    width: '100%'\n  },\n  addButtonStyle: {\n    margin: '10px 0px 0px 0px'\n  },\n  chipStyle: {\n    margin: '5px 0px 0px 0px',\n    width: '24%'\n  }\n}));\n\nconst FormTextMulti = props => {\n  const fieldName = props.field.name;\n  const handleChange = props.form.setFieldValue;\n  const classes = useStyles();\n  const [fieldValue, setFieldValue] = useState(props.field.value);\n  const textBoxRef = useRef(null);\n  const chipRef = fieldValue.map(() => createRef());\n  useEffect(() => {\n    console.log(fieldValue);\n    handleChange(fieldName, fieldValue);\n  }, [fieldValue]);\n\n  const addItem = () => {\n    const newItem = textBoxRef.current.children[0].children[0].value;\n    setFieldValue(prevState => {\n      return [...prevState, newItem];\n    });\n    textBoxRef.current.children[0].children[0].value = '';\n  };\n\n  const displayFieldValue = fieldValue.map((value, key) => {\n    return /*#__PURE__*/React.createElement(Chip, {\n      key: key,\n      label: value,\n      onDelete: () => {\n        const textContent = chipRef[key].current.children[0].textContent;\n        const removeThis = chipRef[key].current;\n        setFieldValue(prevState => {\n          const newState = prevState.filter(item => item !== textContent);\n          return newState;\n        });\n      },\n      color: \"primary\",\n      variant: \"outlined\",\n      className: classes.chipStyle,\n      ref: chipRef[key],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    });\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle2\",\n    display: \"block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, props.title), /*#__PURE__*/React.createElement(TextField, {\n    name: props.field.name,\n    type: \"text\",\n    disabled: props.disabled,\n    variant: \"standard\",\n    size: \"medium\",\n    ref: textBoxRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: addItem,\n    className: classes.addButtonStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, \"Add\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, displayFieldValue)));\n};\n\nexport default FormTextMulti;","map":{"version":3,"sources":["/Users/yapfengwei/Desktop/MyApplications/sample3_frontend/src/Components/FormComponents/FormTextMulti.js"],"names":["React","useState","useEffect","useRef","createRef","FormControl","TextField","Typography","makeStyles","Button","Chip","useStyles","theme","formControl","width","addButtonStyle","margin","chipStyle","FormTextMulti","props","fieldName","field","name","handleChange","form","setFieldValue","classes","fieldValue","value","textBoxRef","chipRef","map","console","log","addItem","newItem","current","children","prevState","displayFieldValue","key","textContent","removeThis","newState","filter","item","marginTop","title","disabled"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, createRef } from 'react';\r\nimport { FormControl, TextField, Typography, makeStyles, Button, Chip } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    // margin: theme.spacing(0.5),\r\n    width: '100%',\r\n  },\r\n  addButtonStyle: {\r\n    margin: '10px 0px 0px 0px'\r\n  },\r\n  chipStyle: {\r\n    margin: '5px 0px 0px 0px',\r\n    width: '24%',\r\n  }\r\n}));\r\n\r\nconst FormTextMulti = (props) => {\r\n  const fieldName = props.field.name;\r\n  const handleChange = props.form.setFieldValue;\r\n  const classes = useStyles();\r\n  const [fieldValue, setFieldValue] = useState(props.field.value);\r\n  const textBoxRef = useRef(null);\r\n  const chipRef = fieldValue.map(() => createRef());\r\n\r\n  useEffect(() => {\r\n    console.log(fieldValue);\r\n    handleChange(fieldName, fieldValue);\r\n  }, [fieldValue]);\r\n\r\n  const addItem = () => {\r\n    const newItem = textBoxRef.current.children[0].children[0].value;\r\n    setFieldValue(prevState => {return [...prevState, newItem]});\r\n    textBoxRef.current.children[0].children[0].value = '';\r\n  }\r\n\r\n  const displayFieldValue = fieldValue.map((value, key) => {\r\n    return (\r\n      <Chip \r\n        key={key}\r\n        label={value}\r\n        onDelete={() => {\r\n          const textContent = chipRef[key].current.children[0].textContent;\r\n          const removeThis = chipRef[key].current;\r\n          setFieldValue(prevState => {\r\n            const newState = prevState.filter(item => item !== textContent);\r\n            return newState;\r\n          })\r\n        }}\r\n        color=\"primary\"\r\n        variant=\"outlined\"\r\n        className={classes.chipStyle}\r\n        ref={chipRef[key]}\r\n      />\r\n    )\r\n  });\r\n\r\n  return (\r\n    <div style={{ marginTop: 10 }}>\r\n      <FormControl className={classes.formControl}>\r\n        <Typography variant=\"subtitle2\" display=\"block\">\r\n          {props.title}\r\n        </Typography>\r\n        <TextField\r\n          name={props.field.name}\r\n          type='text'\r\n          disabled={props.disabled}\r\n          variant=\"standard\"\r\n          size=\"medium\"\r\n          ref={textBoxRef}\r\n        />\r\n        <Button variant=\"contained\" color=\"primary\" onClick={addItem} className={classes.addButtonStyle}>\r\n          Add\r\n        </Button>\r\n        <div>\r\n          {displayFieldValue}\r\n        </div>\r\n      </FormControl>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FormTextMulti;"]},"metadata":{},"sourceType":"module"}