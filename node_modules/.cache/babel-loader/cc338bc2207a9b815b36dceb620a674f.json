{"ast":null,"code":"var _jsxFileName = \"/Users/yapfengwei/Desktop/MyApplications/sample3_frontend/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport UserContext from './context/UserContext.js';\nimport Routes from './Routes'; // import Navbar from './Components/Navbar/Navbar';\n\nconst App = () => {\n  const [userData, setUserData] = useState({\n    token: undefined,\n    user: undefined\n  });\n  useEffect(() => {\n    const checkLoggedIn = async () => {\n      let token = localStorage.getItem('auth-token');\n\n      if (token === null) {\n        localStorage.setItem('auth-token', '');\n        token = '';\n      }\n\n      const tokenRes = await axios.post('http://localhost:3030/api/auth/tokenIsValid', null, {\n        headers: {\n          'auth-token': token\n        }\n      });\n\n      if (tokenRes.data) {\n        const userRes = await axios.get('http://localhost:3030/api/users', {\n          headers: {\n            'auth-token': token\n          }\n        });\n        setUserData({\n          token,\n          user: userRes.data\n        });\n      }\n    };\n\n    checkLoggedIn();\n  }, []);\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Routes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/yapfengwei/Desktop/MyApplications/sample3_frontend/src/App.js"],"names":["React","useEffect","useState","BrowserRouter","Router","UserContext","Routes","App","userData","setUserData","token","undefined","user","checkLoggedIn","localStorage","getItem","setItem","tokenRes","axios","post","headers","data","userRes","get"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,aAAa,IAAIC,MAA1B,QAAwC,kBAAxC;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AAEA,OAAOC,MAAP,MAAmB,UAAnB,C,CACA;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC;AACvCQ,IAAAA,KAAK,EAAEC,SADgC;AAEvCC,IAAAA,IAAI,EAAED;AAFiC,GAAD,CAAxC;AAKAV,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,aAAa,GAAG,YAAY;AAChC,UAAIH,KAAK,GAAGI,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAZ;;AACA,UAAGL,KAAK,KAAK,IAAb,EAAmB;AACjBI,QAAAA,YAAY,CAACE,OAAb,CAAqB,YAArB,EAAkC,EAAlC;AACAN,QAAAA,KAAK,GAAC,EAAN;AACD;;AAED,YAAMO,QAAQ,GAAG,MAAMC,KAAK,CAACC,IAAN,CACrB,6CADqB,EAErB,IAFqB,EAGrB;AAACC,QAAAA,OAAO,EAAE;AAAC,wBAAcV;AAAf;AAAV,OAHqB,CAAvB;;AAMA,UAAGO,QAAQ,CAACI,IAAZ,EAAiB;AACf,cAAMC,OAAO,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAU,iCAAV,EAA6C;AAACH,UAAAA,OAAO,EAAE;AAAC,0BAAcV;AAAf;AAAV,SAA7C,CAAtB;AACAD,QAAAA,WAAW,CAAC;AACVC,UAAAA,KADU;AAEVE,UAAAA,IAAI,EAAEU,OAAO,CAACD;AAFJ,SAAD,CAAX;AAID;AACF,KApBD;;AAqBAR,IAAAA,aAAa;AACd,GAvBQ,EAuBN,EAvBM,CAAT;AAyBA,sBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CApCD;;AAsCA,eAAeN,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport UserContext from './context/UserContext.js';\n\nimport Routes from './Routes';\n// import Navbar from './Components/Navbar/Navbar';\n\nconst App = () => {\n  const [userData, setUserData] = useState({\n    token: undefined,\n    user: undefined,\n  })\n\n  useEffect(() => {\n    const checkLoggedIn = async () => {\n      let token = localStorage.getItem('auth-token');\n      if(token === null) {\n        localStorage.setItem('auth-token','');\n        token='';\n      }\n\n      const tokenRes = await axios.post(\n        'http://localhost:3030/api/auth/tokenIsValid',\n        null,\n        {headers: {'auth-token': token}}\n      )\n\n      if(tokenRes.data){\n        const userRes = await axios.get('http://localhost:3030/api/users', {headers: {'auth-token': token}});\n        setUserData({\n          token,\n          user: userRes.data\n        })\n      }\n    }\n    checkLoggedIn();\n  }, [])\n\n  return (\n    <Router>\n      <Routes />\n    </Router>\n  )\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}