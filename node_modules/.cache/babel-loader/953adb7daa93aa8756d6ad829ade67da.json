{"ast":null,"code":"var _jsxFileName = \"/Users/yapfengwei/Desktop/MyApplications/sample3_frontend/src/Routes/Route.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\nimport axios from 'axios';\n\nconst RouteWrapper = async ({\n  component: Component,\n  isPrivate,\n  userData,\n  ...rest\n}) => {\n  // const signed = userData.token;\n  const signed = localStorage.getItem('auth-token'); // Route is private and the user is not logged in\n\n  if (isPrivate && !signed) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    component: Component,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default RouteWrapper;\nRouteWrapper.propTypes = {\n  isPrivate: PropTypes.bool,\n  component: PropTypes.oneOfType([PropTypes.element, PropTypes.func]).isRequired\n};\nRouteWrapper.defaultProps = {\n  isPrivate: false\n};","map":{"version":3,"sources":["/Users/yapfengwei/Desktop/MyApplications/sample3_frontend/src/Routes/Route.js"],"names":["React","PropTypes","Route","Redirect","axios","RouteWrapper","component","Component","isPrivate","userData","rest","signed","localStorage","getItem","propTypes","bool","oneOfType","element","func","isRequired","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAY,GAAG,OAAO;AAC1BC,EAAAA,SAAS,EAAEC,SADe;AAE1BC,EAAAA,SAF0B;AAG1BC,EAAAA,QAH0B;AAI1B,KAAGC;AAJuB,CAAP,KAKf;AACJ;AACA,QAAMC,MAAM,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAf,CAFI,CAGJ;;AAEA,MAAIL,SAAS,IAAI,CAACG,MAAlB,EAA0B;AACxB,wBAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,sBACE,oBAAC,KAAD,oBAAWD,IAAX;AAAiB,IAAA,SAAS,EAAEH,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAGD,CAjBD;;AAmBA,eAAeF,YAAf;AAEAA,YAAY,CAACS,SAAb,GAAyB;AACvBN,EAAAA,SAAS,EAAEP,SAAS,CAACc,IADE;AAEvBT,EAAAA,SAAS,EAAEL,SAAS,CAACe,SAAV,CAAoB,CAACf,SAAS,CAACgB,OAAX,EAAoBhB,SAAS,CAACiB,IAA9B,CAApB,EAAyDC;AAF7C,CAAzB;AAKAd,YAAY,CAACe,YAAb,GAA4B;AAC1BZ,EAAAA,SAAS,EAAE;AADe,CAA5B","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\nimport axios from 'axios';\n\nconst RouteWrapper = async ({\n  component: Component,\n  isPrivate,\n  userData,\n  ...rest\n}) => {\n  // const signed = userData.token;\n  const signed = localStorage.getItem('auth-token')\n  // Route is private and the user is not logged in\n\n  if (isPrivate && !signed) {\n    return <Redirect to=\"/login\" />;\n  }\n\n  return (\n    <Route {...rest} component={Component} />\n  )\n}\n\nexport default RouteWrapper;\n\nRouteWrapper.propTypes = {\n  isPrivate: PropTypes.bool,\n  component: PropTypes.oneOfType([PropTypes.element, PropTypes.func]).isRequired\n}\n\nRouteWrapper.defaultProps = {\n  isPrivate: false\n}\n"]},"metadata":{},"sourceType":"module"}