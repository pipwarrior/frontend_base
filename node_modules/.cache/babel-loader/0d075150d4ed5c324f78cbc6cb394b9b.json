{"ast":null,"code":"var _jsxFileName = \"/Users/yapfengwei/Desktop/MyApplications/sample3_frontend/src/Routes/Route.js\";\nimport React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\nimport UserContext from '../context/UserContext'; // const { userData } = useContext(UserContext);\n\nconsole.log('=== Route.js ===');\nconsole.log(userData);\n\nconst RouteWrapper = ({\n  component: Component,\n  isPrivate,\n  ...rest\n}) => {\n  const signed = true; // Route is private and the user is not logged in\n\n  if (!isPrivate) {\n    return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n      component: Component,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 12\n      }\n    }));\n  }\n\n  if (isPrivate && !signed) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    component: Component,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default RouteWrapper;\nRouteWrapper.propTypes = {\n  isPrivate: PropTypes.bool,\n  component: PropTypes.oneOfType([PropTypes.element, PropTypes.func]).isRequired\n};\nRouteWrapper.defaultProps = {\n  isPrivate: false\n};","map":{"version":3,"sources":["/Users/yapfengwei/Desktop/MyApplications/sample3_frontend/src/Routes/Route.js"],"names":["React","useContext","PropTypes","Route","Redirect","UserContext","console","log","userData","RouteWrapper","component","Component","isPrivate","rest","signed","propTypes","bool","oneOfType","element","func","isRequired","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,WAAP,MAAwB,wBAAxB,C,CAEA;;AACAC,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAD,OAAO,CAACC,GAAR,CAAYC,QAAZ;;AAEA,MAAMC,YAAY,GAAG,CAAC;AACpBC,EAAAA,SAAS,EAAEC,SADS;AAEpBC,EAAAA,SAFoB;AAGpB,KAAGC;AAHiB,CAAD,KAIf;AACJ,QAAMC,MAAM,GAAG,IAAf,CADI,CAEJ;;AACA,MAAI,CAACF,SAAL,EAAgB;AACd,wBAAO,oBAAC,KAAD,oBAAWC,IAAX;AAAiB,MAAA,SAAS,EAAEF,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD;;AAED,MAAIC,SAAS,IAAI,CAACE,MAAlB,EAA0B;AACxB,wBAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,sBACE,oBAAC,KAAD,oBAAWD,IAAX;AAAiB,IAAA,SAAS,EAAEF,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAGD,CAlBD;;AAoBA,eAAeF,YAAf;AAEAA,YAAY,CAACM,SAAb,GAAyB;AACvBH,EAAAA,SAAS,EAAEV,SAAS,CAACc,IADE;AAEvBN,EAAAA,SAAS,EAAER,SAAS,CAACe,SAAV,CAAoB,CAACf,SAAS,CAACgB,OAAX,EAAoBhB,SAAS,CAACiB,IAA9B,CAApB,EAAyDC;AAF7C,CAAzB;AAKAX,YAAY,CAACY,YAAb,GAA4B;AAC1BT,EAAAA,SAAS,EAAE;AADe,CAA5B","sourcesContent":["import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\nimport UserContext from '../context/UserContext';\n\n// const { userData } = useContext(UserContext);\nconsole.log('=== Route.js ===')\nconsole.log(userData);\n\nconst RouteWrapper = ({\n  component: Component,\n  isPrivate,\n  ...rest\n}) => {\n  const signed = true;\n  // Route is private and the user is not logged in\n  if (!isPrivate) {\n    return <Route {...rest} component={Component} />\n  }\n\n  if (isPrivate && !signed) {\n    return <Redirect to=\"/login\" />;\n  }\n\n  return (\n    <Route {...rest} component={Component} />\n  )\n}\n\nexport default RouteWrapper;\n\nRouteWrapper.propTypes = {\n  isPrivate: PropTypes.bool,\n  component: PropTypes.oneOfType([PropTypes.element, PropTypes.func]).isRequired\n}\n\nRouteWrapper.defaultProps = {\n  isPrivate: false\n}\n"]},"metadata":{},"sourceType":"module"}