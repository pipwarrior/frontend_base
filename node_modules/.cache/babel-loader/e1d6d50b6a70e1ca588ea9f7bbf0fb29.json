{"ast":null,"code":"var _jsxFileName = \"/Users/yapfengwei/Desktop/MyApplications/sample3_frontend/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport axios from 'axios';\nimport UserContext from './context/UserContext.js';\nimport Routes from './Routes';\nimport Header from './Components/Layout/Header';\nimport './App.css';\n\nconst App = () => {\n  const [userData, setUserData] = useState({\n    token: undefined,\n    user: undefined\n  });\n  console.log('===== APP =====');\n  console.log(process.env.NODE_ENV);\n  useEffect(() => {\n    const checkLoggedIn = async () => {\n      let token = localStorage.getItem('auth-token');\n\n      if (token === null) {\n        localStorage.setItem('auth-token', '');\n        localStorage.setItem('accountType', '');\n        token = '';\n      } // Use this to check token timer\n\n\n      const tokenRes = await axios.post('http://localhost:3030/api/auth/tokenIsValid', null, {\n        headers: {\n          'auth-token': token\n        }\n      });\n\n      if (tokenRes.data) {\n        const userRes = await axios.get('http://localhost:3030/api/users', {\n          headers: {\n            'auth-token': token\n          }\n        });\n        setUserData({\n          token: token,\n          accountType: userRes.data.accountType,\n          username: userRes.data.username,\n          fullName: userRes.data.fullName\n        });\n      }\n    };\n\n    checkLoggedIn();\n  }, []);\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(UserContext.Provider, {\n    value: {\n      userData,\n      setUserData\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Routes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/yapfengwei/Desktop/MyApplications/sample3_frontend/src/App.js"],"names":["React","useEffect","useState","BrowserRouter","Router","axios","UserContext","Routes","Header","App","userData","setUserData","token","undefined","user","console","log","process","env","NODE_ENV","checkLoggedIn","localStorage","getItem","setItem","tokenRes","post","headers","data","userRes","get","accountType","username","fullName"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,aAAa,IAAIC,MAA1B,QAAwC,kBAAxC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AAEA,OAAO,WAAP;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC;AACvCU,IAAAA,KAAK,EAAEC,SADgC;AAEvCC,IAAAA,IAAI,EAAED;AAFiC,GAAD,CAAxC;AAIAE,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYC,OAAO,CAACC,GAAR,CAAYC,QAAxB;AACAlB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMmB,aAAa,GAAG,YAAY;AAChC,UAAIR,KAAK,GAAGS,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAZ;;AACA,UAAGV,KAAK,KAAK,IAAb,EAAmB;AACjBS,QAAAA,YAAY,CAACE,OAAb,CAAqB,YAArB,EAAkC,EAAlC;AACAF,QAAAA,YAAY,CAACE,OAAb,CAAqB,aAArB,EAAmC,EAAnC;AACAX,QAAAA,KAAK,GAAC,EAAN;AACD,OAN+B,CAQhC;;;AACA,YAAMY,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,IAAN,CACrB,6CADqB,EAErB,IAFqB,EAGrB;AAACC,QAAAA,OAAO,EAAE;AAAC,wBAAcd;AAAf;AAAV,OAHqB,CAAvB;;AAMA,UAAGY,QAAQ,CAACG,IAAZ,EAAiB;AACf,cAAMC,OAAO,GAAG,MAAMvB,KAAK,CAACwB,GAAN,CAAU,iCAAV,EAA6C;AAACH,UAAAA,OAAO,EAAE;AAAC,0BAAcd;AAAf;AAAV,SAA7C,CAAtB;AACAD,QAAAA,WAAW,CAAC;AACVC,UAAAA,KAAK,EAAEA,KADG;AAEVkB,UAAAA,WAAW,EAAEF,OAAO,CAACD,IAAR,CAAaG,WAFhB;AAGVC,UAAAA,QAAQ,EAAEH,OAAO,CAACD,IAAR,CAAaI,QAHb;AAIVC,UAAAA,QAAQ,EAAEJ,OAAO,CAACD,IAAR,CAAaK;AAJb,SAAD,CAAX;AAMD;AACF,KAxBD;;AAyBAZ,IAAAA,aAAa;AACd,GA3BQ,EA2BN,EA3BM,CAAT;AA6BA,sBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEV,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CADF;AAQD,CA5CD;;AA8CA,eAAeF,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport axios from 'axios';\nimport UserContext from './context/UserContext.js';\n\nimport Routes from './Routes';\nimport Header from './Components/Layout/Header';\n\nimport './App.css';\n\nconst App = () => {\n  const [userData, setUserData] = useState({\n    token: undefined,\n    user: undefined,\n  })\n  console.log('===== APP =====');\n  console.log(process.env.NODE_ENV);\n  useEffect(() => {\n    const checkLoggedIn = async () => {\n      let token = localStorage.getItem('auth-token');\n      if(token === null) {\n        localStorage.setItem('auth-token','');\n        localStorage.setItem('accountType','')\n        token='';\n      }\n\n      // Use this to check token timer\n      const tokenRes = await axios.post(\n        'http://localhost:3030/api/auth/tokenIsValid',\n        null,\n        {headers: {'auth-token': token}}\n      )\n\n      if(tokenRes.data){\n        const userRes = await axios.get('http://localhost:3030/api/users', {headers: {'auth-token': token}});\n        setUserData({\n          token: token,\n          accountType: userRes.data.accountType,\n          username: userRes.data.username,\n          fullName: userRes.data.fullName\n        })\n      }\n    }\n    checkLoggedIn();\n  }, [])\n  \n  return (\n    <Router>\n      <UserContext.Provider value={{ userData, setUserData }}>\n        <Header />\n        <Routes />\n      </UserContext.Provider>\n    </Router>\n  )\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}